apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: crane-get-rolebindings
  namespace: default
rules:
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["rolebindings", "roles"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["secrets", "namespaces", "pods", "nodes", "services", "endpoints", "configmaps"]
  verbs: ["get", "list"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list"]
- apiGroups: ["networking.istio.io"]
  resources: ["virtualservices", "destinationrules", "gateways", "serviceentries"]
  verbs: ["get", "list"]
---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: crane-get-rolebindings-binding
  namespace: default
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
roleRef:
  kind: Role
  name: crane-get-rolebindings
  apiGroup: rbac.authorization.k8s.io
---  

# If istio-ingress is the ingress type 
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-reader
  namespace: istio-ingress
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: secret-reader-binding
  namespace: istio-ingress
subjects:
- kind: ServiceAccount
  name: default           # or your custom SA name
  namespace: default      # your pod's namespace
roleRef:
  kind: Role
  name: secret-reader
  apiGroup: rbac.authorization.k8s.io
---

apiVersion: v1
kind: Pod
metadata:
  name: cranehook
  namespace: default
spec:
  serviceAccountName: default
  automountServiceAccountToken: true
  containers:
  - name: cranehook-ctr
    securityContext:
      runAsUser: 1337
      runAsGroup: 1337
      allowPrivilegeEscalation: false
      runAsNonRoot: true  
    env: 
    - name: WORKING_NAMESPACE
      value: <namespace>
    - name: ROLE_NAME
      value: <role-name>
    - name: ROLE_BINDING_NAME
      value: <role-binding-name>
    - name: SERVICE_ACCOUNT_NAME
      value: <service-account-name>
    - name: KUBERNETES_WEB_EXPOSE_TYPE
      value: <ingress-type>
    - name: DOCKER_REGISTRY
      value: "gcr.io/verdant-bulwark-278"  
    - name: KUBERNETES_WEB_EXPOSE_TLS_SECRET_NAME
      value: <tls-secret-name>
    image: "gcr.io/verdant-bulwark-278/cranehook:latest"
    imagePullPolicy: "Always"
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "250m"
  restartPolicy: "Always"
